---
- name: Deploy Boggart
  hosts: all
  gather_facts: false

  pre_tasks:
    - name: Login to Container Registry
      containers.podman.podman_login:
        username: "{{ podman.registry_username }}"
        password: "{{ podman.registry_password }}"
        registry: "{{ podman.registry }}"

    - name: Pull Application Image
      containers.podman.podman_image:
        name: "{{ boggart.container_image }}"
        tag: "{{ boggart.container_tag }}"
        state: present

    - name: Create Postgres Database Volume
      containers.podman.podman_volume:
        name: "{{ postgres.container_volume }}"
        state: present

    - name: Pull Postgres Database Image
      containers.podman.podman_image:
        name: "{{ postgres.container_image }}"
        tag: "{{ postgres.container_tag }}"
        state: present

    - name: Create pgAdmin Volume
      containers.podman.podman_volume:
        name: "{{ pgadmin.container_volume }}"
        state: present

    - name: Pull pgAdmin Image
      containers.podman.podman_image:
        name: "{{ pgadmin.container_image }}"
        tag: "{{ pgadmin.container_tag }}"
        state: present

  tasks:
    - name: Create Pod
      containers.podman.podman_pod:
        name: "{{ podman.pod_name }}"
        state: created
        ports:
          - "{{ pgadmin.listen_port }}:{{ pgadmin.listen_port }}"

    - name: Create Boggart Container
      containers.podman.podman_container:
        name: app-boggart
        pod: "{{ podman.pod_name }}"
        image: "{{ boggart.container_image }}:{{ boggart.container_tag }}"
        state: created
        secrets:
          - openai_api_key
          - openai_dalle_model
          - openai_dalle_image_size
          - openai_dalle_image_quality
          - discord_bot_key
          - discord_image_channel
          - backblaze_endpoint_url
          - backblaze_application_key_id
          - backblaze_application_key
          - backblaze_bucket_name
          - postgres_username
          - postgres_password
          - postgres_database
          - postgres_host
          - postgres_port

    - name: Create Database Container
      containers.podman.podman_container:
        name: db-boggart
        pod: "{{ podman.pod_name }}"
        image: "{{ postgres.container_image }}:{{ postgres.container_tag }}"
        state: created
        secrets:
          - postgres_username
          - postgres_password
          - postgres_database
        volumes:
          - "{{ postgres.container_volume }}:{{ postgres.container_volume_target }}"
        env:
          POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
          POSTGRES_USER_FILE: /run/secrets/postgres_username
          POSTGRES_DB_FILE: /run/secrets/postgres_database

    - name: Create pgAdmin Container
      containers.podman.podman_container:
        name: pgadmin-boggart
        pod: "{{ podman.pod_name }}"
        image: "{{ pgadmin.container_image }}:{{ pgadmin.container_tag }}"
        state: created
        volumes:
          - "{{ pgadmin.container_volume }}:{{ pgadmin.container_volume_target }}"
        env:
          PGADMIN_DEFAULT_EMAIL: "{{ pgadmin.default_email }}"
          PGADMIN_DEFAULT_PASSWORD: "{{ pgadmin.default_password }}"
          PGADMIN_LISTEN_PORT: "{{ pgadmin.listen_port }}"

    - name: Start Postgres Container
      containers.podman.podman_container:
        name: db-boggart
        state: started

    - name: Start pgAdmin Container
      containers.podman.podman_container:
        name: pgadmin-boggart
        state: started

    - name: Start Boggart Container
      containers.podman.podman_container:
        name: app-boggart
        state: started
